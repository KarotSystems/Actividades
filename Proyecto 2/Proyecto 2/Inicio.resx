<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>